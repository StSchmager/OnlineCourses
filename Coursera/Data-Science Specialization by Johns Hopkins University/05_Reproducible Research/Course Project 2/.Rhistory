# Load packages
library(dplyr)
library(tidyr)
library(datasets)
library(ggplot2)
library(xlsx)
sessionInfo()
options(scipen=999)
# Dataset is downloaded from the web, saved locally, and read into R.
DataSource  <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
DataFile    <- "StormData.csv"
DataPlace   <- "C:/Users/Stefan/Google Drive/Coursera/04_Reproducible Research/ReproducibleResearch_PeerAssignment2"
setwd(DataPlace)
if (!file.exists(DataFile)) {
download.file(url = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
destfile = DataFile); DownloadDate = date()
}
dat <- read.csv(file = DataFile)
dat <- select(dat,
STATE, EVTYPE, BGN_DATE,    # U.S. state and event type and date
FATALITIES, INJURIES,       # measures for harm of population
PROPDMG, PROPDMGEXP,        # measures for (economic) proporty damage
CROPDMG, CROPDMGEXP         # measures for (economic) crop damage
)
dat$DATE <- as.Date(dat$BGN_DATE, "%m/%d/%Y")
View(dat)
summary(dat$Date)
summary(dat$DATE)
Min(dat$DATE)
Minimum(dat$DATE)
Median(dat$DATE)
dat$DATE <- as.Date(dat$BGN_DATE, "%m/%d/%Y")
summary(dat$DATE)
# Display all states in the dataset
unique(dat$STATE)
# Compare to vector with 50 U.S. states
data(state)
factor(unique(state.abb))
# Filter out the 50 U.S. states from the dataset
dat <- dat[dat$STATE %in% state.abb,]
dat$STATE <- factor(dat$STATE)
# Compare all states in the dataset to the same result at beginning of code chunk
unique(dat$STATE)
## Measures in terms of population health are defined
# FATALITIES (Number of directly killed)
dat$FATALITIES <- as.integer(dat$FATALITIES)
# INJURIES (Number of directly injured)
dat$INJURIES <- as.integer(dat$INJURIES)
## Measures in terms of economic damage are defined and compute
# PROPDMG/EXP (Property damage in whole numbers and hundredths & A multiplier where Hundred (H), Thousand (K), Million (M), Billion (B))
dat$PROPDMGEXP <- factor(toupper(dat$PROPDMGEXP))
summary(dat$PROPDMGEXP)
dat$PROPDMGEXP2[dat$PROPDMGEXP == ""]  <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "-"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "?"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "+"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "0"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "1"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "2"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "3"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "4"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "5"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "6"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "7"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "8"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "H"] <- 100
dat$PROPDMGEXP2[dat$PROPDMGEXP == "K"] <- 1000
dat$PROPDMGEXP2[dat$PROPDMGEXP == "M"] <- 1000000
dat$PROPDMGEXP2[dat$PROPDMGEXP == "B"] <- 1000000000
# Computed measure
dat$PropertyDamage <- dat$PROPDMG*dat$PROPDMGEXP2
# CROPDMG/EXP (Crop damage in whole numbers and hundredths & A multiplier where Hundred (H), Thousand (K), Million (M), Billion (B))
dat$CROPDMGEXP <- factor(toupper(dat$CROPDMGEXP))
summary(dat$CROPDMGEXP)
dat$CROPDMGEXP2[dat$CROPDMGEXP == ""]  <- 1
dat$CROPDMGEXP2[dat$CROPDMGEXP == "?"] <- 1
dat$CROPDMGEXP2[dat$CROPDMGEXP == "0"] <- 1
dat$CROPDMGEXP2[dat$CROPDMGEXP == "2"] <- 1
dat$CROPDMGEXP2[dat$CROPDMGEXP == "H"] <- 100
dat$CROPDMGEXP2[dat$CROPDMGEXP == "K"] <- 1000
dat$CROPDMGEXP2[dat$CROPDMGEXP == "M"] <- 1000000
dat$CROPDMGEXP2[dat$CROPDMGEXP == "B"] <- 1000000000
# Computed measure
dat$CropDamage <- dat$CROPDMG*dat$CROPDMGEXP2
dat$EVTYPE <- factor(tolower(dat$EVTYPE))
head(unique(dat$EVTYPE), 10)
# Info from documentation p. 5 & 6: "The only events permitted in Storm Data are listed in Table 1 of Section 2.1.1. The chosen event name should be the one that most accurately describes the meteorological event leading to fatalities, injuries, damage, etc."
dat <- as.data.frame(summarize(group_by(dat, EVTYPE),
CropDamage        = sum(CropDamage,     na.rm = T),
PropertyDamage    = sum(PropertyDamage, na.rm = T),
Injuries          = sum(INJURIES,       na.rm = T),
Fatalities        = sum(FATALITIES,     na.rm = T)))
summary(dat$CropDamage)
summary(dat$PropertyDamage)
dat$PopDamage <- dat$CropDamage + dat$PropertyDamage
summary(dat$PopDam)
dat$EconDamage <- dat$CropDamage + dat$PropertyDamage
summary(dat$EconDamage)
dat$EconDamage <- dat$CropDamage + dat$PropertyDamage
summary(dat$EconDamage)
summary(dat$CropDamage)
summary(dat$PropertyDamage)
dat$PopDamage           <- dat$Fatalities + dat$Injuries(
summary(dat$PopDamage)
summary(dat$Fatalities)
summary(dat$Injuries)
dat$PopDamage           <- dat$Fatalities + dat$Injuries
summary(dat$PopDamage)
summary(dat$Fatalities)
summary(dat$Injuries)
dat$PopDamage           <- dat$PopDamage/1000 # in thousands
dat$Fatalities          <- dat$Fatalities/1000 # in thousands
dat$Injuries            <- dat$Injuries/1000 # in thousands
dat1 <- select(dat, EVTYPE, PopDamage, Fatalities, Injuries)
dat2 <- select(dat, EVTYPE, EconDamage, PropertyDamage, CropDamage)
dat1 <- select(dat, EVTYPE, PopDamage, Fatalities, Injuries)
%>% arrange(PopDamage, Fatalities, Injuries)
dat1 <- select(dat, EVTYPE, PopDamage, Fatalities, Injuries) %>%
arrange(PopDamage, Fatalities, Injuries)
View(dat1)
dat1 <- select(dat, EVTYPE, PopDamage, Fatalities, Injuries) %>%
arrange(desc(PopDamage), desc(Fatalities), desc(Injuries))
View(dat1)
dat1 <- select(dat, EVTYPE, PopDamage, Fatalities, Injuries) %>%
arrange(desc(PopDamage))
dat1 <- select(dat, EVTYPE, PopDamage, Fatalities, Injuries) %>%
arrange(desc(PopDamage)) %>% head(10)
View(dat1)
dat2 <- select(dat, EVTYPE, EconDamage, ProperyDamage, CropDamage) %>%
arrange(desc(EconDamage)) %>% head(10)
dat2 <- select(dat, EVTYPE, EconDamage, PropertyDamage, CropDamage) %>%
arrange(desc(EconDamage)) %>% head(10)
View(dat2)
dat1 <- gather(dat1, "Measure", "Value", PopDamage, Fatalities, Injuries)
dat2 <- gather(dat2, "Measure", "Value", EconDamage, PropertyDamage, CropDamage)
# Population health
dat1 <- select(dat, EVTYPE, PopDamage, Fatalities, Injuries) %>%
arrange(desc(PopDamage)) %>% head(10)
# Economic Damage
dat2 <- select(dat, EVTYPE, EconDamage, PropertyDamage, CropDamage) %>%
arrange(desc(EconDamage)) %>% head(10)
dat1 <- gather(select(dat1, -PopDamage), "Measure", "Value", Fatalities, Injuries)
dat2 <- gather(select(dat2, -EconDamage), "Measure", "Value", PropertyDamage, CropDamage)
ggplot(dat, aes(x = reorder(EventType, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
ggplot(dat, aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
ggplot(dat, aes(x = EVTYPE, y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
ggplot(dat1, aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
ggplot(dat2,
aes(x = reorder(EventType, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest economic consequences") +
xlab("Event Types") +
ylab("Measure (in Billion USD)") +
theme(legend.position = "bottom")
ggplot(dat2,
aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest economic consequences") +
xlab("Event Types") +
ylab("Measure (in Billion USD)") +
theme(legend.position = "bottom")
# Load packages
library(dplyr)
library(tidyr)
library(datasets)
library(ggplot2)
library(xlsx)
sessionInfo()
options(scipen=999)
# Dataset is downloaded from the web, saved locally, and read into R.
DataSource  <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
DataFile    <- "StormData.csv"
DataPlace   <- "C:/Users/Stefan/Google Drive/Coursera/04_Reproducible Research/ReproducibleResearch_PeerAssignment2"
setwd(DataPlace)
if (!file.exists(DataFile)) {
download.file(url = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
destfile = DataFile); DownloadDate = date()
}
dat <- read.csv(file = DataFile)
dat <- select(dat,
STATE, EVTYPE, BGN_DATE,    # U.S. state and event type and date
FATALITIES, INJURIES,       # measures for harm of population
PROPDMG, PROPDMGEXP,        # measures for (economic) proporty damage
CROPDMG, CROPDMGEXP         # measures for (economic) crop damage
)
dat$DATE <- as.Date(dat$BGN_DATE, "%m/%d/%Y")
summary(dat$DATE)
# Display all states in the initial dataset
unique(dat$STATE)
# Compare to vector with 50 U.S. states from the R "state" data set
data(state)
factor(unique(state.abb))
# Filter out the 50 U.S. states from the dataset
dat <- dat[dat$STATE %in% state.abb,]
dat$STATE <- factor(dat$STATE)
# Compare all states in the filtered dataset to the same result at beginning of code chunk
unique(dat$STATE)
dat$FATALITIES <- as.integer(dat$FATALITIES)
# INJURIES (Number of directly injured)
dat$INJURIES <- as.integer(dat$INJURIES)
dat$PROPDMGEXP <- factor(toupper(dat$PROPDMGEXP))
summary(dat$PROPDMGEXP)
dat$PROPDMGEXP2[dat$PROPDMGEXP == ""]  <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "-"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "?"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "+"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "0"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "1"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "2"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "3"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "4"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "5"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "6"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "7"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "8"] <- 1
dat$PROPDMGEXP2[dat$PROPDMGEXP == "H"] <- 100
dat$PROPDMGEXP2[dat$PROPDMGEXP == "K"] <- 1000
dat$PROPDMGEXP2[dat$PROPDMGEXP == "M"] <- 1000000
dat$PROPDMGEXP2[dat$PROPDMGEXP == "B"] <- 1000000000
dat$PropertyDamage <- dat$PROPDMG*dat$PROPDMGEXP2
# CROPDMG/EXP (Crop damage in whole numbers and hundredths & A multiplier where Hundred (H), Thousand (K), Million (M), Billion (B))
dat$CROPDMGEXP <- factor(toupper(dat$CROPDMGEXP))
summary(dat$CROPDMGEXP)
dat$CROPDMGEXP2[dat$CROPDMGEXP == ""]  <- 1
dat$CROPDMGEXP2[dat$CROPDMGEXP == "?"] <- 1
dat$CROPDMGEXP2[dat$CROPDMGEXP == "0"] <- 1
dat$CROPDMGEXP2[dat$CROPDMGEXP == "2"] <- 1
dat$CROPDMGEXP2[dat$CROPDMGEXP == "H"] <- 100
dat$CROPDMGEXP2[dat$CROPDMGEXP == "K"] <- 1000
dat$CROPDMGEXP2[dat$CROPDMGEXP == "M"] <- 1000000
dat$CROPDMGEXP2[dat$CROPDMGEXP == "B"] <- 1000000000
# Computed measure
dat$CropDamage <- dat$CROPDMG*dat$CROPDMGEXP2
dat$EVTYPE <- factor(toupper(dat$EVTYPE))
head(unique(dat$EVTYPE), 10)
dat0 <- as.data.frame(summarize(group_by(dat, EVTYPE),
CropDamage        = sum(CropDamage,     na.rm = T),
PropertyDamage    = sum(PropertyDamage, na.rm = T),
Injuries          = sum(INJURIES,       na.rm = T),
Fatalities        = sum(FATALITIES,     na.rm = T)))
dat0$EconDamage <- dat0$CropDamage + dat0$PropertyDamage
summary(dat0$EconDamage)
summary(dat0$CropDamage)
summary(dat0$PropertyDamage)
dat0$CropDamage          <- dat0$CropDamage/    1000000000 # in billions
dat0$PropertyDamage      <- dat0$PropertyDamage/1000000000 # in billions
dat0$EconDamage          <- dat0$EconDamage/    1000000000 # in billions
dat0$PopDamage           <- dat0$Fatalities + dat0$Injuries
summary(dat0$PopDamage)
summary(dat0$Fatalities)
summary(dat0$Injuries)
dat0$PopDamage           <- dat0$PopDamage/ 1000 # in thousands
dat0$Fatalities          <- dat0$Fatalities/1000 # in thousands
dat0$Injuries            <- dat0$Injuries/  1000 # in thousands
dat1 <- select(dat0, EVTYPE, PopDamage, Fatalities, Injuries) %>%
arrange(desc(PopDamage)) %>% head(10)
dat1
dat1 <- select(dat0, EVTYPE, Fatalities, Injuries, PopDamage) %>%
arrange(desc(PopDamage)) %>% head(10)
dat1
ggplot(dat1, aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
ggplot(dat1, aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
ggplot(dat1, aes(x = EVTYPE, y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
dat1 <- select(dat0, EVTYPE, Fatalities, Injuries, PopDamage) %>%
arrange(desc(PopDamage)) %>% head(10)
dat1
dat1 <- gather(select(dat1, -PopDamage), "Measure", "Value", Fatalities, Injuries)
ggplot(dat1, aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
dat2 <- select(dat0, EVTYPE, EconDamage, PropertyDamage, CropDamage) %>%
arrange(desc(EconDamage)) %>% head(10)
dat2 <- gather(select(dat2, -EconDamage), "Measure", "Value", PropertyDamage, CropDamage)
dat2
ggplot(dat2,
aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest economic consequences") +
xlab("Event Types") +
ylab("Measure (in Billion USD)") +
theme(legend.position = "bottom")
dat1        <- select(dat0, EVTYPE, Fatalities, Injuries, PopDamage) %>%
arrange(desc(PopDamage)) %>% head(10)
table1      <- dat1
dat1        <- gather(select(dat1, -PopDamage), "Measure", "Value", Fatalities, Injuries)
graph1      <- ggplot(dat1, aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest population health damage") +
xlab("Event Types") +
ylab("Measure Counts (in Thousands)") +
theme(legend.position = "bottom")
graph1
table1
dat2        <- select(dat0, EVTYPE, EconDamage, PropertyDamage, CropDamage) %>%
arrange(desc(EconDamage)) %>% head(10)
dat2        <- gather(select(dat2, -EconDamage), "Measure", "Value", PropertyDamage, CropDamage)
table2      <- dat2
graph2      <- ggplot(dat2,
aes(x = reorder(EVTYPE, Value), y = Value, fill = Measure)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
ggtitle("Event Types with the greatest economic consequences") +
xlab("Event Types") +
ylab("Measure (in Billion USD)") +
theme(legend.position = "bottom")
rename(table1, WeatherEvent = EVTYPE, TotalDamage = PopDamage)
date()
DownloadDate = date()
DownloadDate
DownloadDate = date()
