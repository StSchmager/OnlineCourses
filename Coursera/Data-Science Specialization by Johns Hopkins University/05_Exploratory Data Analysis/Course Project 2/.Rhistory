setwd(C:\SMS_EXPORT)
setwd(C:/SMS_EXPORT)
library(swirl)
swirl()
head(pollution)
dim(pollution)
Summary(pollution$pm25)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
high
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta",  lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, col = "red", data = pollution)
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
lirary(swi)
library(swirl)
swirl()
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(data, plot(speed, dist)
)
with(data, plot(speed, dist)
)
with(data, plot(speed, dist))
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
library(swirl)
swirl()
1
head(airquality)
range(airquality$Ozone, na.rm = T)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = ""Ozone and Wind in New York City"")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- (airquality, month == 5)
may <- subset(airquality, month == 5)
head(airquality)
may <- subset(airquality, Month==5)
points(airquality$Wind, airquality$Ozone, pch = 17, col = "blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, title = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtwext("Ozone and Weather in New York City", outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
head(airquahead)
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(MOnth), data = airquality, layout = c(5, 1))
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5, 1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source("plot1.R", local = TRUE)
source(pathtofile = "plot1.R", local = TRUE)
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = F, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
colors(10)
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
library(datasets)
data(airquality)
library(datasets)
data(airquality)
quit()
library(swirl)
rm(list=ls())
swirl()
skip()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, aes(drv))
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv, method = "loess")
g <- ggplot(mpg, aes(displ, hwy))
g
summary(g)
g+geom_point()
g+geom_point()+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))+ggtitle("Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!", x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!", labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2)) + geom_smooth(size = 4, linetype = 3, method = "lm", se = F)
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = F)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(color(aes(drv)))+theme_bw(base_family = "Times")
swirl()
g + geom_point(color(aes(drv)))+theme_bw(base_family = "Times")
g + geom_point(color=aes(drv))+theme_bw(base_family = "Times")
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
plot(myx, myy, type = "l", ylim=c(-3,3))
g <- ggplot(testdat, aes(myx, myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(displ, hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~, margins = T)
g + geom_point() + facet_grid(drv~, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
swirl()
library(swirl)
swirl()
str(diamonds)
qplot(price, data = diamonds)
(diamonds$price)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut())
qplot(price, data = diamonds, geom = "density", color = cut
)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm", facets = .~cut)
g <- ggplot(diamonds, aes(depth, price))
g
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,4), na.rm = T)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
## Reading  & Processing Data ##########################################################################################
# Load package
library(plyr)
library(dplyr)
library(ggplot2)
# Set working directory, weblink of data set, zip-folder name, and data file name
setwd("C:/Users/Stefan/Google Drive/Coursera/05_Exploratory Data Analysis/ExData_Plotting2")
data.source <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
zip.folder  <- "NEI_data.zip"
data.file1  <- "summarySCC_PM25.rds"
data.file2  <- "Source_Classification_Code.rds"
# Download zip file if not already done so
if (!file.exists(zip.folder)) {
download.file(data.source, zip.folder)
}
# Extract files from zip file if not already done so
if (!file.exists(data.file1)) {
unzip(zip.folder, c(data.file1,
data.file2))
}
# Read extracted data files
data0a <- readRDS(data.file1)
data0b <- readRDS(data.file2)
## Define variables
# A five-digit number (represented as a string) indicating the U.S. county
data0a$fips          <- factor(data0a$fips)
# The name of the source as indicated by a digit string (see source code classification table)
data0a$SCC           <- factor(data0a$SCC)
# A string indicating the pollutant
data0a$Pollutant     <- factor(data0a$Pollutant)
# Amount of PM2.5 emitted, in tons
data0a$Emissions     <- as.numeric(data0a$Emissions)
# The type of source (point, non-point, on-road, or non-road)
data0a$type          <- factor(data0a$type)
# The year of emissions recorded
data0a$year          <- as.integer(data0a$year)
## Plotting/Saving Graphs ##############################################################################################
with(data1, {
plot(year, TotalEmissions/1000000,
type = "b",
main = expression("Total PM"[2.5]*" Emissions from 1999 to 2008 in All U.S. Counties"),
ylab = expression(paste("Total Emissions from ", PM[2.5], " (in Million Tons)")),
xlab = "Years",
xaxt="n")
axis(1, at = seq(1999, 2008, by = 1), las=2)
})
data1 <- group_by(data0a, year) %>% summarize(TotalEmissions = sum(Emissions))
with(data1, {
plot(year, TotalEmissions/1000000,
type = "b",
main = expression("Total PM"[2.5]*" Emissions from 1999 to 2008 in All U.S. Counties"),
ylab = expression(paste("Total Emissions from ", PM[2.5], " (in Million Tons)")),
xlab = "Years",
xaxt="n")
axis(1, at = seq(1999, 2008, by = 1), las=2)
})
with(data1, {
plot(year, TotalEmissions/1000000,
type = "b",
main = expression("Total PM"[2.5]*" Emissions \nfrom 1999 to 2008 in All U.S. Counties"),
ylab = expression(paste("Total Emissions from ", PM[2.5], " (in Million Tons)")),
xlab = "Years",
xaxt="n")
axis(1, at = seq(1999, 2008, by = 1), las=2)
})
View(data0b)
ggplot(data = data3,
aes(as.factor(year), TotalEmissions/1000)) +
geom_point() +
geom_smooth(method = "lm")
facet_grid(fips ~ type) +
labs(title = expression(paste("Total ", PM[2.5], " Emissions from 1999 to 2008 in Baltimore City by Source Type")),
y     = expression(paste("Total Emissions from ", PM[2.5], " (in Thousand Tons)")),
x     = "Years") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data3 <- filter(data0a, fips == "24510") %>%
mutate(fips = factor(fips, levels = c("24510"), labels = c("Baltimore City, Maryland"))) %>%
group_by(fips, type, year) %>%
summarize(TotalEmissions = sum(Emissions))
ggplot(data = data3,
aes(as.factor(year), TotalEmissions/1000)) +
geom_point() +
geom_smooth(method = "lm")
facet_grid(fips ~ type) +
labs(title = expression(paste("Total ", PM[2.5], " Emissions from 1999 to 2008 in Baltimore City by Source Type")),
y     = expression(paste("Total Emissions from ", PM[2.5], " (in Thousand Tons)")),
x     = "Years") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = data3,
aes(as.factor(year), TotalEmissions/1000, group = 1)) +
geom_point() +
geom_smooth(method = "lm")
facet_grid(fips ~ type) +
labs(title = expression(paste("Total ", PM[2.5], " Emissions from 1999 to 2008 in Baltimore City by Source Type")),
y     = expression(paste("Total Emissions from ", PM[2.5], " (in Thousand Tons)")),
x     = "Years") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
